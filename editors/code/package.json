{
    "name": "move-on-aptos",
    "displayName": "Move on Aptos",
    "description": "Official VS Code extension for the Move language on Aptos â€” fast, modern, and reliably supported.",
    "version": "0.1.0-dev",
    "private": true,
    "publisher": "aptoslabs",
    "icon": "./icons/move_on_aptos.jpeg",
    "releaseTag": null,
    "homepage": "https://github.com/aptos-labs/move-vscode-extension",
    "repository": {
        "type": "git",
        "url": "https://github.com/aptos-labs/move-vscode-extension.git"
    },
    "bugs": {
        "url": "https://github.com/aptos-labs/move-vscode-extension/issues",
        "email": "maksim@aptoslabs.com"
    },
    "engines": {
        "vscode": "^1.96.0"
    },
    "activationEvents": [
        "workspaceContains:Move.toml",
        "workspaceContains:*/Move.toml"
    ],
    "categories": [
        "Programming Languages",
        "Formatters"
    ],
    "keywords": [
        "move",
        "aptos",
        "blockchain",
        "smart-contract",
        "web3",
        "debug",
        "movefmt"
    ],
    "main": "./out/extension.js",
    "contributes": {
        "commands": [
            {
                "command": "move-on-aptos.analyzerStatus",
                "title": "Status",
                "category": "move-on-aptos"
            },
            {
                "command": "move-on-aptos.restartServer",
                "title": "Restart server",
                "category": "move-on-aptos"
            },
            {
                "command": "move-on-aptos.startServer",
                "title": "Start server",
                "category": "move-on-aptos"
            },
            {
                "command": "move-on-aptos.stopServer",
                "title": "Stop server",
                "category": "move-on-aptos"
            },
            {
                "command": "move-on-aptos.serverVersion",
                "title": "Show Language Server Version",
                "category": "move-on-aptos"
            },
            {
                "command": "move-on-aptos.toggleLSPLogs",
                "title": "Toggle LSP Logs",
                "category": "move-on-aptos"
            },
            {
                "command": "move-on-aptos.syntaxTreeHideWhitespace",
                "title": "Hide Whitespace",
                "icon": "$(filter)",
                "category": "move-on-aptos (syntax tree)"
            },
            {
                "command": "move-on-aptos.syntaxTreeShowWhitespace",
                "title": "Show Whitespace",
                "icon": "$(filter-filled)",
                "category": "move-on-aptos (syntax tree)"
            }
        ],
        "configuration": [
            {
                "title": "statusBar",
                "properties": {
                    "move-on-aptos.statusBar.clickAction": {
                        "type": "string",
                        "enum": [
                            "stopServer",
                            "openLogs"
                        ],
                        "enumDescriptions": [
                            "Stop Server",
                            "Open Logs"
                        ],
                        "default": "openLogs",
                        "markdownDescription": "Action to run when clicking the extension status bar item."
                    },
                    "move-on-aptos.statusBar.showStatusBar": {
                        "markdownDescription": "When to show the extension status bar.\n\n`\"always\"` Always show the status bar.\n\n`\"never\"` Never show the status bar.\n\n`{ documentSelector: <DocumentSelector>[] }` Show the status bar if the open file matches any of the given document selectors.\n\nSee [VS Code -- DocumentSelector](https://code.visualstudio.com/api/references/document-selector) for more information.",
                        "anyOf": [
                            {
                                "type": "string",
                                "enum": [
                                    "always",
                                    "never"
                                ]
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "documentSelector": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "language": {
                                                    "type": "string"
                                                },
                                                "notebookType": {
                                                    "type": "string"
                                                },
                                                "scheme": {
                                                    "type": "string"
                                                },
                                                "pattern": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        ],
                        "default": {
                            "documentSelector": [
                                {
                                    "language": "move"
                                },
                                {
                                    "pattern": "**/Move.toml"
                                }
                            ]
                        }
                    }
                }
            },
            {
                "title": "server",
                "properties": {
                    "move-on-aptos.server.path": {
                        "type": [
                            "null",
                            "string"
                        ],
                        "scope": "machine-overridable",
                        "default": null,
                        "markdownDescription": "Path to aptos-language-server executable (points to bundled binary by default)."
                    },
                    "move-on-aptos.server.extraEnv": {
                        "type": [
                            "null",
                            "object"
                        ],
                        "additionalProperties": {
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "default": null,
                        "markdownDescription": "Extra environment variables that will be passed to the aptos-language-server executable. Useful for passing e.g. `RA_LOG` for debugging."
                    },
                    "move-on-aptos.trace.server": {
                        "type": "string",
                        "scope": "window",
                        "enum": [
                            "off",
                            "messages",
                            "verbose"
                        ],
                        "enumDescriptions": [
                            "No traces",
                            "Error only",
                            "Full log"
                        ],
                        "default": "off",
                        "description": "Trace requests to the aptos-language-server (this is usually overly verbose and not recommended for regular users)."
                    },
                    "move-on-aptos.showSyntaxTree": {
                        "markdownDescription": "Whether to show the syntax tree view.",
                        "default": false,
                        "type": "boolean"
                    },
                    "move-on-aptos.initializeStopped": {
                        "markdownDescription": "Do not start aptos-language-server server when the extension is activated.",
                        "default": false,
                        "type": "boolean"
                    }
                }
            },
            {
                "title": "$generated-start"
            },
            {
                "title": "general",
                "properties": {
                    "move-on-aptos.aptosPath": {
                        "markdownDescription": "Path to the `aptos-cli` executable.",
                        "default": null,
                        "type": [
                            "null",
                            "string"
                        ]
                    }
                }
            },
            {
                "title": "aptos",
                "properties": {
                    "move-on-aptos.aptos.autoreload": {
                        "markdownDescription": "Automatically refresh project info on `Move.toml` changes.",
                        "default": true,
                        "type": "boolean"
                    }
                }
            },
            {
                "title": "diagnostics",
                "properties": {
                    "move-on-aptos.diagnostics.disabled": {
                        "markdownDescription": "List of aptos-language-server diagnostics to disable.",
                        "default": [],
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "uniqueItems": true
                    }
                }
            },
            {
                "title": "diagnostics",
                "properties": {
                    "move-on-aptos.diagnostics.enable": {
                        "markdownDescription": "Whether to show native aptos-language-server diagnostics.",
                        "default": true,
                        "type": "boolean"
                    }
                }
            },
            {
                "title": "files",
                "properties": {
                    "move-on-aptos.files.excludeDirs": {
                        "markdownDescription": "These paths (file/directories) will be ignored by aptos-language-server. They are\nrelative to the workspace root, and globs are not supported. You may\nalso need to add the folders to Code's `files.watcherExclude`.",
                        "default": [],
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            {
                "title": "inlayHints",
                "properties": {
                    "move-on-aptos.inlayHints.parameterHints.enable": {
                        "markdownDescription": "Whether to show function parameter name inlay hints at the call\nsite.",
                        "default": true,
                        "type": "boolean"
                    }
                }
            },
            {
                "title": "inlayHints",
                "properties": {
                    "move-on-aptos.inlayHints.renderColons": {
                        "markdownDescription": "Whether to render leading colons for type hints, and trailing colons for parameter hints.",
                        "default": true,
                        "type": "boolean"
                    }
                }
            },
            {
                "title": "inlayHints",
                "properties": {
                    "move-on-aptos.inlayHints.typeHints.enable": {
                        "markdownDescription": "Whether to show inlay type hints for variables.",
                        "default": true,
                        "type": "boolean"
                    }
                }
            },
            {
                "title": "inlayHints",
                "properties": {
                    "move-on-aptos.inlayHints.typeHints.hideClosureParameter": {
                        "markdownDescription": "Whether to hide inlay parameter type hints for closures.",
                        "default": false,
                        "type": "boolean"
                    }
                }
            },
            {
                "title": "lens",
                "properties": {
                    "move-on-aptos.lens.enable": {
                        "markdownDescription": "Whether to show CodeLens in Move files.",
                        "default": false,
                        "type": "boolean"
                    }
                }
            },
            {
                "title": "lens",
                "properties": {
                    "move-on-aptos.lens.location": {
                        "markdownDescription": "Where to render annotations.",
                        "default": "above_name",
                        "type": "string",
                        "enum": [
                            "above_name",
                            "above_whole_item"
                        ],
                        "enumDescriptions": [
                            "Render annotations above the name of the item.",
                            "Render annotations above the whole item, including documentation comments and attributes."
                        ]
                    }
                }
            },
            {
                "title": "lens",
                "properties": {
                    "move-on-aptos.lens.run.enable": {
                        "markdownDescription": "Whether to show `Run` lens. Only applies when\n`#move-on-aptos.lens.enable#` is set.",
                        "default": true,
                        "type": "boolean"
                    }
                }
            },
            {
                "title": "lens",
                "properties": {
                    "move-on-aptos.lens.specifications.enable": {
                        "markdownDescription": "Whether to show `Specifications` lens. Only applies when\n`#move-on-aptos.lens.enable#` is set.",
                        "default": true,
                        "type": "boolean"
                    }
                }
            },
            {
                "title": "movefmt",
                "properties": {
                    "move-on-aptos.movefmt.extraArgs": {
                        "markdownDescription": "Additional arguments to `rustfmt`.",
                        "default": [],
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            {
                "title": "movefmt",
                "properties": {
                    "move-on-aptos.movefmt.path": {
                        "markdownDescription": "Path to the `movefmt` executable.",
                        "default": null,
                        "type": [
                            "null",
                            "string"
                        ]
                    }
                }
            },
            {
                "title": "runnables",
                "properties": {
                    "move-on-aptos.runnables.extraArgs": {
                        "markdownDescription": "Additional arguments to be passed to `aptos move` for runnables such as tests.\nFor example, it may be `--override-std`.",
                        "default": [],
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            {
                "title": "$generated-end"
            }
        ],
        "languages": [
            {
                "id": "move",
                "extensions": [
                    ".move"
                ],
                "aliases": [
                    "Move",
                    "move"
                ],
                "configuration": "./language-configuration.json",
                "icon": {
                    "light": "./icons/move_logo.svg",
                    "dark": "./icons/move_logo.svg"
                }
            }
        ],
        "semanticTokenTypes": [
            {
                "id": "angle",
                "description": "Style for < or >",
                "superType": "punctuation"
            },
            {
                "id": "arithmetic",
                "description": "Style for arithmetic operators",
                "superType": "operator"
            },
            {
                "id": "attribute",
                "description": "Style for attributes"
            },
            {
                "id": "attributeBracket",
                "description": "Style for attribute invocation brackets, that is the `#[` and `]` tokens",
                "superType": "punctuation"
            },
            {
                "id": "bitwise",
                "description": "Style for bitwise operators",
                "superType": "operator"
            },
            {
                "id": "boolean",
                "description": "Style for boolean literals",
                "superType": "keyword"
            },
            {
                "id": "brace",
                "description": "Style for { or }",
                "superType": "punctuation"
            },
            {
                "id": "bracket",
                "description": "Style for [ or ]",
                "superType": "punctuation"
            },
            {
                "id": "builtinType",
                "description": "Style for builtin types",
                "superType": "type"
            },
            {
                "id": "colon",
                "description": "Style for :",
                "superType": "punctuation"
            },
            {
                "id": "comma",
                "description": "Style for ,",
                "superType": "punctuation"
            },
            {
                "id": "comparison",
                "description": "Style for comparison operators",
                "superType": "operator"
            },
            {
                "id": "const",
                "description": "Style for consts",
                "superType": "variable"
            },
            {
                "id": "dot",
                "description": "Style for .",
                "superType": "punctuation"
            },
            {
                "id": "label",
                "description": "Style for labels"
            },
            {
                "id": "logical",
                "description": "Style for logic operators",
                "superType": "operator"
            },
            {
                "id": "macroBang",
                "description": "Style for the ! token of macro calls",
                "superType": "punctuation"
            },
            {
                "id": "parenthesis",
                "description": "Style for ( or )",
                "superType": "punctuation"
            },
            {
                "id": "punctuation",
                "description": "Style for generic punctuation"
            },
            {
                "id": "operator",
                "description": "Style for operators",
                "superType": "punctuation"
            },
            {
                "id": "semicolon",
                "description": "Style for ;",
                "superType": "punctuation"
            },
            {
                "id": "unresolvedReference",
                "description": "Style for names which can not be resolved due to compilation errors"
            }
        ],
        "menus": {
            "commandPalette": [
                {
                    "command": "move-on-aptos.syntaxTreeHideWhitespace",
                    "when": "false"
                },
                {
                    "command": "move-on-aptos.syntaxTreeShowWhitespace",
                    "when": "false"
                }
            ],
            "view/title": [
                {
                    "command": "move-on-aptos.syntaxTreeHideWhitespace",
                    "group": "navigation",
                    "when": "view == aptosSyntaxTree && !aptosSyntaxTree.hideWhitespace"
                },
                {
                    "command": "move-on-aptos.syntaxTreeShowWhitespace",
                    "group": "navigation",
                    "when": "view == aptosSyntaxTree && aptosSyntaxTree.hideWhitespace"
                }
            ]
        },
        "views": {
            "aptosSyntaxTreeContainer": [
                {
                    "id": "aptosSyntaxTree",
                    "name": "Move on Aptos Syntax Tree",
                    "icon": "$(file-code)",
                    "when": "inAptosProject && config.move-on-aptos.showSyntaxTree"
                }
            ]
        },
        "viewsContainers": {
            "activitybar": [
                {
                    "id": "aptosSyntaxTreeContainer",
                    "title": "Move on Aptos Syntax Tree",
                    "icon": "$(list-tree)"
                }
            ]
        }
    },
    "scripts": {
        "build-base": "esbuild ./src/extension.ts --bundle --outfile=out/extension.js --external:vscode --format=cjs --platform=node --target=node20",
        "vscode:prepublish": "npm run build-base -- --minify",
        "package": "vsce package -o move-on-aptos.vsix",
        "build": "npm run build-base -- --sourcemap",
        "watch": "npm run build-base -- --sourcemap --watch",
        "typecheck": "tsc"
    },
    "dependencies": {
        "@vscode/vsce": "=3.6.0",
        "command-exists": "^1.2.9",
        "vscode-languageclient": "^9.0.1"
    },
    "overrides": {
        "css-select": "5.2.0"
    },
    "devDependencies": {
        "@types/command-exists": "^1.2.3",
        "@types/node": "20.x",
        "@types/vscode": "^1.96.0",
        "esbuild": "^0.25.0",
        "typescript": "^5.7.3"
    }
}
