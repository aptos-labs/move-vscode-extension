SOURCE_FILE@0..219
  MODULE@0..218
    MODULE_KW@0..6 "module"
    WHITESPACE@6..7 " "
    VALUE_ADDRESS@7..10
      INT_NUMBER@7..10 "0x1"
    COLON_COLON@10..12 "::"
    NAME@12..40
      IDENT@12..40 "call_expr_complex_ine ..."
    WHITESPACE@40..41 " "
    L_CURLY@41..42 "{"
    WHITESPACE@42..47 "\n    "
    FUN@47..216
      FUN_KW@47..50 "fun"
      WHITESPACE@50..51 " "
      NAME@51..55
        IDENT@51..55 "main"
      PARAM_LIST@55..57
        L_PAREN@55..56 "("
        R_PAREN@56..57 ")"
      WHITESPACE@57..58 " "
      BLOCK_EXPR@58..216
        L_CURLY@58..59 "{"
        WHITESPACE@59..68 "\n        "
        EXPR_STMT@68..210
          CALL_EXPR@68..209
            PATH_EXPR@68..78
              PATH@68..78
                PATH_SEGMENT@68..78
                  NAME_REF@68..78
                    IDENT@68..78 "take_first"
            VALUE_ARG_LIST@78..209
              L_PAREN@78..79 "("
              WHITESPACE@79..92 "\n            "
              VALUE_ARG@92..138
                IF_EXPR@92..138
                  IF_KW@92..94 "if"
                  WHITESPACE@94..95 " "
                  CONDITION@95..103
                    L_PAREN@95..96 "("
                    PATH_EXPR@96..102
                      PATH@96..102
                        PATH_SEGMENT@96..102
                          NAME_REF@96..102
                            IDENT@96..102 "a_less"
                    R_PAREN@102..103 ")"
                  WHITESPACE@103..104 " "
                  BLOCK_EXPR@104..113
                    L_CURLY@104..105 "{"
                    WHITESPACE@105..106 " "
                    BIN_EXPR@106..111
                      PATH_EXPR@106..107
                        PATH@106..107
                          PATH_SEGMENT@106..107
                            NAME_REF@106..107
                              IDENT@106..107 "a"
                      WHITESPACE@107..108 " "
                      PLUS@108..109 "+"
                      WHITESPACE@109..110 " "
                      PATH_EXPR@110..111
                        PATH@110..111
                          PATH_SEGMENT@110..111
                            NAME_REF@110..111
                              IDENT@110..111 "b"
                    WHITESPACE@111..112 " "
                    R_CURLY@112..113 "}"
                  WHITESPACE@113..114 " "
                  ELSE_KW@114..118 "else"
                  WHITESPACE@118..119 " "
                  BLOCK_EXPR@119..138
                    L_CURLY@119..120 "{"
                    WHITESPACE@120..121 " "
                    BIN_EXPR@121..136
                      PATH_EXPR@121..128
                        PATH@121..128
                          PATH_SEGMENT@121..128
                            NAME_REF@121..128
                              IDENT@121..128 "a_clone"
                      WHITESPACE@128..129 " "
                      MINUS@129..130 "-"
                      WHITESPACE@130..131 " "
                      PATH_EXPR@131..136
                        PATH@131..136
                          PATH_SEGMENT@131..136
                            NAME_REF@131..136
                              IDENT@131..136 "neg_b"
                    WHITESPACE@136..137 " "
                    R_CURLY@137..138 "}"
              COMMA@138..139 ","
              WHITESPACE@139..152 "\n            "
              VALUE_ARG@152..199
                IF_EXPR@152..199
                  IF_KW@152..154 "if"
                  WHITESPACE@154..155 " "
                  CONDITION@155..164
                    L_PAREN@155..156 "("
                    BANG_EXPR@156..163
                      BANG@156..157 "!"
                      PATH_EXPR@157..163
                        PATH@157..163
                          PATH_SEGMENT@157..163
                            NAME_REF@157..163
                              IDENT@157..163 "a_less"
                    R_PAREN@163..164 ")"
                  WHITESPACE@164..165 " "
                  BLOCK_EXPR@165..184
                    L_CURLY@165..166 "{"
                    WHITESPACE@166..167 " "
                    BIN_EXPR@167..182
                      PATH_EXPR@167..174
                        PATH@167..174
                          PATH_SEGMENT@167..174
                            NAME_REF@167..174
                              IDENT@167..174 "a_clone"
                      WHITESPACE@174..175 " "
                      MINUS@175..176 "-"
                      WHITESPACE@176..177 " "
                      PATH_EXPR@177..182
                        PATH@177..182
                          PATH_SEGMENT@177..182
                            NAME_REF@177..182
                              IDENT@177..182 "neg_b"
                    WHITESPACE@182..183 " "
                    R_CURLY@183..184 "}"
                  WHITESPACE@184..185 " "
                  ELSE_KW@185..189 "else"
                  WHITESPACE@189..190 " "
                  BLOCK_EXPR@190..199
                    L_CURLY@190..191 "{"
                    WHITESPACE@191..192 " "
                    BIN_EXPR@192..197
                      PATH_EXPR@192..193
                        PATH@192..193
                          PATH_SEGMENT@192..193
                            NAME_REF@192..193
                              IDENT@192..193 "a"
                      WHITESPACE@193..194 " "
                      PLUS@194..195 "+"
                      WHITESPACE@195..196 " "
                      PATH_EXPR@196..197
                        PATH@196..197
                          PATH_SEGMENT@196..197
                            NAME_REF@196..197
                              IDENT@196..197 "b"
                    WHITESPACE@197..198 " "
                    R_CURLY@198..199 "}"
              WHITESPACE@199..208 "\n        "
              R_PAREN@208..209 ")"
          SEMICOLON@209..210 ";"
        WHITESPACE@210..215 "\n    "
        R_CURLY@215..216 "}"
    WHITESPACE@216..217 "\n"
    R_CURLY@217..218 "}"
  WHITESPACE@218..219 "\n"
