name: release
on:
  schedule:
    - cron: "0 0 * * *" # midnight UTC

  workflow_dispatch:
#
#  pull_request:

env:
  CARGO_INCREMENTAL: 0
  CARGO_NET_RETRY: 10
#  RUSTFLAGS: "-D warnings"
  RUSTUP_MAX_RETRIES: 10
  FETCH_DEPTH: 0 # pull in the tags for the version string
  MACOSX_DEPLOYMENT_TARGET: 13.0

jobs:
  dist:
    strategy:
      matrix:
        include:
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            code-target: win32-x64
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            code-target: linux-x64
          - os: macos-13
            target: x86_64-apple-darwin
            code-target: darwin-x64
          - os: macos-14
            target: aarch64-apple-darwin
            code-target: darwin-arm64

    name: dist (${{ matrix.target }})
    runs-on: ${{ matrix.os }}

    env:
      RA_TARGET: ${{ matrix.target }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
#        with:
#          fetch-depth: ${{ env.FETCH_DEPTH }}

      - name: Install Node.js toolchain
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Dist (plain)
        run: cargo xtask dist --client-patch-version ${{ github.run_number }}

      - run: npm ci
        working-directory: editors/code

      - name: Package Extension (nightly)
        if: github.ref != 'refs/heads/release' && matrix.code-target
        run: npx vsce package -o "../../dist/aptos-analyzer-${{ matrix.code-target }}.vsix" --target ${{ matrix.code-target }} --pre-release
        working-directory: editors/code

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-${{ matrix.target }}
          path: ./dist

  publish_nightly:
    name: publish (nightly)
    runs-on: ubuntu-latest
    needs: [ "dist" ]
    permissions:
      contents: write
    steps:
      - name: Install Nodejs
        uses: actions/setup-node@v4
        with:
          node-version: 22

#      - run: echo "TAG=$(date --iso -u)" >> $GITHUB_ENV
#        if: github.ref == 'refs/heads/release'

      - run: echo "TAG=nightly" >> $GITHUB_ENV
#        if: github.ref != 'refs/heads/release'

      - run: 'echo "TAG: $TAG"'

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: ${{ env.FETCH_DEPTH }}

      - run: echo "HEAD_SHA=$(git rev-parse HEAD)" >> $GITHUB_ENV
      - run: 'echo "HEAD_SHA: $HEAD_SHA"'

      - uses: actions/download-artifact@v4
        with:
          name: dist-aarch64-apple-darwin
          path: dist

      - uses: actions/download-artifact@v4
        with:
          name: dist-x86_64-apple-darwin
          path: dist

      - uses: actions/download-artifact@v4
        with:
          name: dist-x86_64-unknown-linux-gnu
          path: dist

      - uses: actions/download-artifact@v4
        with:
          name: dist-x86_64-pc-windows-msvc
          path: dist

      - run: ls -al ./dist

      - name: Publish Release
        uses: ./.github/actions/github-release
        with:
          files: "dist/*"
          name: ${{ env.TAG }}
          token: ${{ secrets.GITHUB_TOKEN }}






